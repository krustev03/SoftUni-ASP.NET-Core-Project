@using FitnessHub.Web.ViewModels.Chat
@using FitnessHub.Data.Models
@using Microsoft.AspNetCore.Identity;
@inject UserManager<ApplicationUser> userManager
@model MessageInputModel

@{
    this.ViewData["Title"] = "Chat";
}

<section class="breadcrumb-section set-bg" data-setbg="images/chat-banner.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb-text">
                    <h2>Chat</h2>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="contact-section spad items-section">
    <h4 class="col chat__header text-center text-white mb-md-4">Newest messages:</h4>
    <div class="services__content container d-flex flex-column" id="view-all">
        @await Html.PartialAsync("_ViewAll")
    </div>
    <div class="container">
        <div class="row">
            <div class="col-lg-6 form-section text-center">
                <div class="leave-comment">
                        <div>
                            <textarea asp-for="@Model.Content" type="textarea" id="messageInput" placeholder="Content"></textarea>
                            <span asp-validation-for="@Model.Content" class="text-danger"></span>
                        </div>
                        <div>
                            <button type="submit" id="sendButton" class="btn btn-orange btn-send">Send</button>
                        </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>

        var connection =
            new signalR.HubConnectionBuilder()
                .withUrl("/chatter")
                .build();

        connection.on("NewMessage",
            function () {
                $('#messageInput').val('');
                $("#view-all").load("/Chat/GetPartial");
            });

        $("#sendButton").click(function() {
            var message = $("#messageInput").val();
            connection.invoke("Send", message);
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        function escapeHtml(unsafe) {
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }
    </script>
}