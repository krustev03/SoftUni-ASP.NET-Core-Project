@using FitnessHub.Web.ViewModels.Chat
@using FitnessHub.Data.Models
@inject FitnessHub.Data.Common.Repositories.IDeletableEntityRepository<Message> messagesRepo
@inject FitnessHub.Data.Common.Repositories.IDeletableEntityRepository<ApplicationUser> usersRepo
@model AddMessageInputModel

@{
    this.ViewData["Title"] = "Chat";
}

<main>
    <h1 class="display-2 main__heading"><b>Chat</b></h1>
    <h4 class="col chat__header text-center">Newest messages:</h4>
    <div class="services__content container d-flex flex-column">
        @foreach (var message in messagesRepo.All().ToList().OrderByDescending(x => x.CreatedOn))
        {
            <div class="entity chat__box row align-items-center d-flex">
                <div class="col-10">
                    <h4>@usersRepo.GetByIdWithDeletedAsync(message.AuthorId).Result.UserName: @message.Content</h4>
                </div>
                <div class="col-2">
                    <h4>@message.CreatedOn</h4>
                </div>
            </div>}
    </div>
    <div class="form__inputs chat__form">
        <form class="d-flex flex-column" method="post" asp-action="All" asp-controller="Chat">
            <div class="chat__form-group form-group">
                <label asp-for="@Model.Content">Message:</label>
                <input class="form-control" type="text" asp-for="@Model.Content" />
                <span asp-validation-for="@Model.Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">Send</button>
            </div>
        </form>
    </div>
</main>